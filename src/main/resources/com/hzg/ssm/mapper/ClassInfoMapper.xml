<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hzg.ssm.mapper.ClassInfoMapper" >
  <resultMap id="BaseResultMap" type="com.hzg.ssm.domain.ClassInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <!--<result column="employee_id" property="employeeId" jdbcType="BIGINT" />-->
    <association property="employee" columnPrefix="e_" javaType="com.hzg.ssm.domain.Employee">
      <result column="id" property="id"/>
      <result column="name" property="name"/>
    </association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from classinfo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hzg.ssm.domain.ClassInfo" useGeneratedKeys="true" keyProperty="id" >
    insert into classinfo (name, number, employee_id
      )
    values (#{name,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}, #{employee.id,jdbcType=BIGINT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.hzg.ssm.domain.ClassInfo" >
    update classinfo
    set name = #{name,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      employee_id = #{employee.id,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select c.id, c.name, c.number,e.id as e_id,e.name AS e_name
    from classinfo c
    JOIN employee e on c.employee_id=e.id
    where c.id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, name, number, employee_id
    from classinfo
  </select>
  <select id="selectForList" resultMap="BaseResultMap" >
    select c.id, c.name, c.number, c.employee_id,e.id as e_id,e.name as e_name
    from classinfo c
    JOIN employee e ON c.employee_id=e.id
    <where>
      <if test="keyword!=null">
        and c.name like concat('%',#{keyword},'%')
      </if>
      <if test="employeeId>0">
        and c.employee_id=#{employeeId}
      </if>
    </where>

  </select>
</mapper>