<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hzg.ssm.mapper.CustomerTraceHistoryMapper">
    <resultMap id="BaseResultMap" type="com.hzg.ssm.domain.CustomerTraceHistory">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="trace_time" property="traceTime" jdbcType="DATE"/>
        <result column="trace_details" property="traceDetails" jdbcType="VARCHAR"/>
        <result column="trace_result" property="traceResult" jdbcType="INTEGER"/>
        <!--<result column="customer_id" property="customer.id" jdbcType="BIGINT" />-->
        <!--<result column="input_user_id" property="inputUser.id" jdbcType="BIGINT" />-->
        <!--<result column="trace_type_id" property="traceType.id" jdbcType="BIGINT" />-->
        <association property="customer" javaType="com.hzg.ssm.domain.Customer" columnPrefix="c2_">
                <result column="id" property="id"/>
                <result column="name" property="name"/>
        </association>
        <association property="traceType" javaType="com.hzg.ssm.domain.SystemDictionaryItem" columnPrefix="si_">
                <result column="id" property="id"/>
                <result column="title" property="title"/>
        </association>
        <association property="inputUser" javaType="com.hzg.ssm.domain.Employee" columnPrefix="e_">
                <result column="id" property="id"/>
                <result column="name" property="name"/>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from customertracehistory
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.hzg.ssm.domain.CustomerTraceHistory" useGeneratedKeys="true"
            keyProperty="id">
        insert into customertracehistory (trace_time, trace_details, trace_type_id,
                                          trace_result, customer_id, input_user_id
        )
        values (#{traceTime,jdbcType=DATE}, #{traceDetails,jdbcType=VARCHAR}, #{traceType.id,jdbcType=BIGINT},
                #{traceResult,jdbcType=INTEGER}, #{customer.id,jdbcType=BIGINT}, #{inputUser.id,jdbcType=BIGINT}
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.hzg.ssm.domain.CustomerTraceHistory">
        update customertracehistory
        set trace_time    = #{traceTime,jdbcType=DATE},
            trace_details = #{traceDetails,jdbcType=VARCHAR},
            trace_type_id = #{traceType.id,jdbcType=BIGINT},
            trace_result  = #{traceResult,jdbcType=INTEGER},
            customer_id   = #{customer.id,jdbcType=BIGINT},
            input_user_id = #{inputUser.id,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
            id,
            trace_time,
            trace_details,
            trace_type_id,
            trace_result,
            customer_id,
            input_user_id
        from customertracehistory
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
            id,
            trace_time,
            trace_details,
            trace_type_id,
            trace_result,
            customer_id,
            input_user_id
        from customertracehistory
    </select>
    <select id="selectForList" resultMap="BaseResultMap">
        select
            c.id,
            c.trace_time,
            c.trace_result,
            c.trace_details,si.id as si_id,si.title as si_title,c2.id as c2_id,c2.name as c2_name,e.id e_id,e.name as e_name
        from customertracehistory c
        LEFT JOIN systemdictionaryitem si on si.id=c.trace_type_id
        LEFT JOIN customer c2 ON  c2.id=c.customer_id
        Left JOIN employee e on e.id=c.input_user_id
        <where>
            <if test="keyword!=null">
                and
                (
                c2.name like concat('%',#{keyword},'%')
                or e.name  like concat('%',#{keyword},'%')
                )

            </if>
        </where>
    </select>
</mapper>